/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.userinterface;

import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import javax.swing.JOptionPane;

/**
 *
 * @author Alan Rodriguez
 */
public class Item extends javax.swing.JDialog {

    private final String itemText, path;
    
    /**
     * Creates new JDialog from a form
     */
    public Item(java.awt.Frame parent, boolean modal, String itemText, String path, Item past) {
        super(parent, modal);
        initComponents();
        
        this.itemText = itemText;
        this.path = path;
        
        this.textField.setText(itemText);
        
        int x, y;
        if (past == null) {
            x = parent.getX(); y = parent.getY();
            this.setLocation(x, y + this.getHeight());
        } else {
            x = past.getX(); y = past.getY();
            this.setLocation(x, y + this.getHeight());
        }
        this.setVisible(true);
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        icon = new javax.swing.JPanel();
        text = new javax.swing.JPanel();
        textField = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setFocusable(false);
        setMaximumSize(new java.awt.Dimension(500, 50));
        setMinimumSize(new java.awt.Dimension(500, 50));
        setUndecorated(true);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        icon.setBackground(new java.awt.Color(204, 204, 204));
        icon.setToolTipText("Go to directory");
        icon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        icon.setFocusCycleRoot(true);
        icon.setPreferredSize(new java.awt.Dimension(500, 50));
        icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout iconLayout = new javax.swing.GroupLayout(icon);
        icon.setLayout(iconLayout);
        iconLayout.setHorizontalGroup(
            iconLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        iconLayout.setVerticalGroup(
            iconLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        getContentPane().add(icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, -1));

        text.setBackground(new java.awt.Color(255, 255, 255));
        text.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        text.setPreferredSize(new java.awt.Dimension(500, 50));
        text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                textMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                textMouseExited(evt);
            }
        });
        text.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textField.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textField.setLabelFor(text);
        text.add(textField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 420, 40));

        getContentPane().add(text, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 450, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String getPath() {      
        int index = path.lastIndexOf("\\");
        return path.substring(0, index);
    }
    
    private void textMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textMouseClicked
        
        if( Desktop.isDesktopSupported() ) {
            try {
                Desktop.getDesktop().open(new File(path));
            } catch (Exception e) {
                System.out.println("ERROR DE IO");
            }
            
        }else{
            JOptionPane.showMessageDialog(this, "NO ES CAPAZ DE UTILIZAR DESKTOP", "WARNING", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_textMouseClicked

    private void iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconMouseClicked

        try {
            Runtime.getRuntime().exec("explorer "+getPath());
        } catch (Exception e) {
        }
        
        System.exit(0);
    }//GEN-LAST:event_iconMouseClicked

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        this.setFocusable(true);
    }//GEN-LAST:event_formMouseEntered

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        this.setFocusable(false);
    }//GEN-LAST:event_formMouseExited

    private void textMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textMouseEntered
        this.text.setBackground(mouseEnterColor);
    }//GEN-LAST:event_textMouseEntered

    private void textMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textMouseExited
        this.text.setBackground(predefault);
    }//GEN-LAST:event_textMouseExited

    @Override
    public String toString() {
        return "Item{" + "path=" + path + '}';
    }

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel icon;
    private javax.swing.JPanel text;
    private javax.swing.JLabel textField;
    // End of variables declaration//GEN-END:variables
    
    private Color predefault = new Color(255, 255, 255);
    private Color mouseEnterColor = new Color(100, 100, 100);
    
}
